[project]
name = "client-feedback-analyzer"
version = "1.0.0"
description = "An Agentic RAG system for analyzing client feedback using FastAPI and LangChain"
readme = "README.md"
requires-python = ">=3.9"
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]
keywords = ["rag", "langchain", "fastapi", "feedback", "analysis"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "fastapi",
    "uvicorn",
    "python-dotenv",
    "openai",
    "langchain",
    "langgraph",
    "langchain-openai",
    "langchain_community",
    "langchain-cohere",
    "qdrant-client",
    "tavily-python",
    "unstructured[csv]",
    "tiktoken",
    "ragas",
    "datasets",
    "pandas",
    "nest-asyncio",
    "langsmith",
    "pillow",
    "rank-bm25",
    "tabulate",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-asyncio",
    "black",
    "isort",
    "flake8",
]

# [project.scripts]
# run-server = "backend.main:app"
# generate-data = "scripts.generate_data:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["backend", "evaluation", "scripts"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88